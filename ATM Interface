/*ATM Interface*/

import java.util.Scanner;

class Account {
    private int accountId;
    private int pin;
    private double balance;
    private String transactionHistory = "";

    public Account(int accountId, int pin, double initialBalance) {
        this.accountId = accountId;
        this.pin = pin;
        this.balance = initialBalance;
    }

    public int getAccountId() {
        return accountId;
    }

    public boolean validatePin(int inputPin) {
        return this.pin == inputPin;
    }

    public void deposit(double amount) {
        balance += amount;
        transactionHistory += "Deposit: $" + amount + "\n";
    }

    public void withdraw(double amount) {
        if (amount <= balance) {
            balance -= amount;
            transactionHistory += "Withdraw: $" + amount + "\n";
        } else {
            System.out.println("Insufficient balance.");
        }
    }

    public void transfer(Account targetAccount, double amount) {
        if (amount <= balance) {
            balance -= amount;
            targetAccount.deposit(amount);
            transactionHistory += "Transfer to Account " + targetAccount.getAccountId() + ": $" + amount + "\n";
        } else {
            System.out.println("Insufficient balance.");
        }
    }

    public void printTransactionHistory() {
        System.out.println(transactionHistory);
    }

    public double getBalance() {
        return balance;
    }
}

public class ATM {
    private static Scanner scanner = new Scanner(System.in);
    private static Account[] accounts = {
            new Account(1, 1234, 500.0),
            new Account(2, 5678, 1000.0),
            new Account(3, 9101, 1500.0)
    };

    public static void main(String[] args) {
        System.out.println("Welcome to the ATM System");

        Account currentAccount = login();

        if (currentAccount != null) {
            boolean exit = false;
            while (!exit) {
                switch (displayMenu()) {
                    case 1:
                        currentAccount.printTransactionHistory();
                        break;
                    case 2:
                        System.out.print("Enter amount to withdraw: ");
                        double withdrawAmount = scanner.nextDouble();
                        currentAccount.withdraw(withdrawAmount);
                        break;
                    case 3:
                        System.out.print("Enter amount to deposit: ");
                        double depositAmount = scanner.nextDouble();
                        currentAccount.deposit(depositAmount);
                        break;
                    case 4:
                        System.out.print("Enter target account ID: ");
                        int targetAccountId = scanner.nextInt();
                        Account targetAccount = findAccount(targetAccountId);
                        if (targetAccount != null) {
                            System.out.print("Enter amount to transfer: ");
                            double transferAmount = scanner.nextDouble();
                            currentAccount.transfer(targetAccount, transferAmount);
                        } else {
                            System.out.println("Target account not found.");
                        }
                        break;
                    case 5:
                        exit = true;
                        System.out.println("Thank you for using the ATM. Goodbye!");
                        break;
                    default:
                        System.out.println("Invalid option. Please try again.");
                        break;
                }
            }
        }
    }

    private static Account login() {
        System.out.print("Enter account ID: ");
        int accountId = scanner.nextInt();
        System.out.print("Enter PIN: ");
        int pin = scanner.nextInt();

        Account account = findAccount(accountId);
        if (account != null && account.validatePin(pin)) {
            System.out.println("Login successful.");
            return account;
        } else {
            System.out.println("Invalid account ID or PIN.");
            return null;
        }
    }

    private static int displayMenu() {
        System.out.println("\nATM Menu:");
        System.out.println("1. Transaction History");
        System.out.println("2. Withdraw");
        System.out.println("3. Deposit");
        System.out.println("4. Transfer");
        System.out.println("5. Quit");
        System.out.print("Choose an option: ");
        return scanner.nextInt();
    }

    private static Account findAccount(int accountId) {
        for (Account account : accounts) {
            if (account.getAccountId() == accountId) {
                return account;
            }
        }
        return null;
    }
}
